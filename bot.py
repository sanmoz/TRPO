import logging
import asyncio
import os
from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from dotenv import load_dotenv

# === –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")

if not ADMIN_ID:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: ADMIN_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ===
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ===
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üìö –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã"),
            KeyboardButton(text="üìñ –õ–µ–∫—Ü–∏–∏"),
            KeyboardButton(text="‚ÑπÔ∏è –û –∫—É—Ä—Å–µ"),
        ],
        [
            KeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é")
        ]
    ],
    resize_keyboard=True,
    one_time_keyboard=False
)

# === –°–ª–æ–≤–∞—Ä—å —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã ===
lab_links = {
    "1": "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å Git –∏ GitHub - https://drive.google.com/file/d/xxx/view",
    "2": "–°–æ–≤–º–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤ GitHub (—Ñ–æ—Ä–∫–∏, pull request) - https://drive.google.com/file/d/yyy/view",
    "3": "–ì–∏–±–∫–∏–µ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–∏ Scrum –∏ Kanban - https://github.com/example/lab3.pdf",
    "4": "–ö–æ–¥-—Å—Ç–∏–ª—å –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ–¥–∞ - https://example.com/lab4.pdf",
    "5": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–¥–∞ - https://example.com/lab5.pdf",
    "6": "CI/CD –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ - https://example.com/lab6.pdf",
    "7": "–û—Ç–ª–∞–¥–∫–∞ –∫–æ–¥–∞ - https://example.com/lab7.pdf",
    "8": "–§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è - https://example.com/lab8.pdf",
}

# === –°–ª–æ–≤–∞—Ä—å —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ª–µ–∫—Ü–∏–∏ ===
lecture_links = {
    "1": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è - https://example.com/lecture1.pdf",
    "2": "–ñ–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û - https://example.com/lecture2.pdf",
    "3": "–ü–∞—Ä–∞–¥–∏–≥–º—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è - https://example.com/lecture3.pdf",
    "4": "–û—Å–Ω–æ–≤—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - https://example.com/lecture4.pdf",
    "5": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã - https://example.com/lecture5.pdf",
    "6": "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –ü–û - https://example.com/lecture6.pdf",
    "7": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ü–û - https://example.com/lecture7.pdf",
    "8": "–û—Ç–ª–∞–¥–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - https://example.com/lecture8.pdf",
}

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ===
@router.message(Command("start"))
async def send_welcome(message: types.Message):
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram-–±–æ—Ç –∫—É—Ä—Å–∞ '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è' (–¢–†–ü–û) "
        "–ò–Ω—Å—Ç–∏—Ç—É—Ç–∞ '–í—ã—Å—à–∞—è –ò–¢-—à–∫–æ–ª–∞' –ö–æ—Å—Ç—Ä–æ–º—Å–∫–æ–≥–æ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞! üéì\n\n"
        "–≠—Ç–æ—Ç –∫—É—Ä—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ—Å–≤–æ–∏—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û, "
        "–∫–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, CI/CD –∏ –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –∏–Ω–∂–µ–Ω–µ—Ä–∏–∏.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –≤ –º–µ–Ω—é –Ω–∏–∂–µ. üëá",
        reply_markup=menu_keyboard
    )

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /lectures ===
@router.message(F.text == "üìñ –õ–µ–∫—Ü–∏–∏")
async def send_lectures_list(message: types.Message):
    lecture_list = "\n".join([f"üéì –õ–µ–∫—Ü–∏—è {num}: {desc}" for num, desc in lecture_links.items()])
    await message.answer(f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–µ–∫—Ü–∏–π:\n\n{lecture_list}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ª–µ–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏.")

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ª–µ–∫—Ü–∏–∏ ===
@router.message(F.text.regexp(r"^\d+$"))
async def send_lecture_link(message: types.Message):
    lecture_number = message.text.strip()
    if lecture_number in lecture_links:
        await message.answer(f"üìñ –õ–µ–∫—Ü–∏—è {lecture_number}: {lecture_links[lecture_number]}")
    else:
        await message.answer("‚ö†Ô∏è –¢–∞–∫–æ–π –ª–µ–∫—Ü–∏–∏ –Ω–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –æ—Ç 1 –¥–æ 8.")

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û –∫—É—Ä—Å–µ' ===
@router.message(F.text == "‚ÑπÔ∏è –û –∫—É—Ä—Å–µ")
async def send_course_info(message: types.Message):
    await message.answer(
        "üìå *–ö—É—Ä—Å: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è*\n\n"
        "–≠—Ç–æ—Ç –∫—É—Ä—Å —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ò–Ω—Å—Ç–∏—Ç—É—Ç–∞ '–í—ã—Å—à–∞—è –ò–¢-—à–∫–æ–ª–∞' "
        "–ö–æ—Å—Ç—Ä–æ–º—Å–∫–æ–≥–æ –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\n"
        "üìñ *–ê–≤—Ç–æ—Ä –∫—É—Ä—Å–∞*: –∫.—Ç.–Ω., –¥–æ—Ü–µ–Ω—Ç –∫–∞—Ñ–µ–¥—Ä—ã –ò–°–¢ –ú–æ–∑–æ—Ö–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ï–≤–≥–µ–Ω—å–µ–≤–∏—á.\n\n"
        "üìö –í —Ä–∞–º–∫–∞—Ö –∫—É—Ä—Å–∞ —Å—Ç—É–¥–µ–Ω—Ç—ã –∏–∑—É—á–∞—Ç –º–µ—Ç–æ–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û, –∫–æ–º–∞–Ω–¥–Ω—É—é —Ä–∞–±–æ—Ç—É, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, CI/CD, "
        "–∞ —Ç–∞–∫–∂–µ –Ω–∞—É—á–∞—Ç—Å—è —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –æ—Ç–ª–∞–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."
    )

# === –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    asyncio.run(main())
